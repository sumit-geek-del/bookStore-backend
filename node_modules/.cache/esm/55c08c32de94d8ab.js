let express,dbConnection,dotenv,cors,bodyParser,helmet,configureRoutes;_de9‍.w("express",[["default",["express"],function(v){express=v}]]);_de9‍.w("./database/dbConnection",[["dbConnection",["dbConnection"],function(v){dbConnection=v}]]);_de9‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_de9‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_de9‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_de9‍.w("helmet",[["default",["helmet"],function(v){helmet=v}]]);_de9‍.w("./config/configureRoutes",[["configureRoutes",["configureRoutes"],function(v){configureRoutes=v}]]);







dotenv.config();

const PORT = process.env.PORT || 8080;
const app = express();

app.use(cors());
app.use(helmet());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended:true}));


configureRoutes(app);



app.get('/', (req, res)=>{
    res.send(`<h1>Hello From the Book Store Backend 💖</h1>`)
})


// Error Handling

app.use((req, res)=>{
    const error = new Error("Route Not Found");
    return res.status(400).json({error:error.message});
})

process.on('uncaughtException', (err)=>{
    _de9‍.g.console.log(err);
})
app.listen(PORT, ()=>{
    console.log(`Server is listening on the port ${PORT} 🌩️`)
})